{"ast":null,"code":"import { all, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_CAMPAIGN_REQUEST // 캠페인 이름 DB에서 저장\n, ADD_CAMPAIGN_SUCCESS, ADD_CAMPAIGN_FAILURE, REMOVE_CAMPAIGN_REQUEST // 캠페인 이름 DB에서 삭제\n, REMOVE_CAMPAIGN_SUCCESS, REMOVE_CAMPAIGN_FAILURE, LOAD_DATA_REQUEST // 카드 데이터 로드\n, LOAD_DATA_SUCCESS, LOAD_DATA_FAILURE, RENDER_CAMPAIGN_REQUEST // 캠페인 데이터 출력\n, RENDER_CAMPAIGN_SUCCESS, RENDER_CAMPAIGN_FAILURE, SEARCH_CAMPAIGN_REQUEST // 카드 데이터 색인\n, SEARCH_CAMPAIGN_SUCCESS, SEARCH_CAMPAIGN_FAILURE, DOWNLOAD_FILE_REQUEST // 다운로드 파일\n, DOWNLOAD_FILE_SUCCESS, DOWNLOAD_FILE_FAILURE // 액션 생성 함수\n} from '../reducers/post/actions';\n\nfunction addAdidasWebAPI(postData) {\n  return axios.post('/post/addcampaign', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addAdidasWeb(action) {\n  try {\n    const result = yield call(addAdidasWebAPI, action.data);\n    yield put({\n      type: ADD_CAMPAIGN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_CAMPAIGN_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddAdidasWeb() {\n  yield takeLatest(ADD_CAMPAIGN_REQUEST, addAdidasWeb);\n}\n\nfunction removeCampaignAPI(postData) {\n  return axios.delete(`/post/${postData}`, {\n    withCredentials: true\n  });\n}\n\nfunction* removeCampaign(action) {\n  try {\n    const result = yield call(removeCampaignAPI, action.data);\n    yield put({\n      type: REMOVE_CAMPAIGN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: REMOVE_CAMPAIGN_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchRemoveName() {\n  yield takeLatest(REMOVE_CAMPAIGN_REQUEST, removeCampaign);\n}\n\nfunction loadDataAPI() {\n  return axios.post('/post/list', {\n    withCredentials: true\n  });\n}\n\nfunction* loadData(action) {\n  try {\n    const result = yield call(loadDataAPI);\n    yield put({\n      type: LOAD_DATA_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_DATA_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadData() {\n  yield takeLatest(LOAD_DATA_REQUEST, loadData);\n}\n\nfunction renderCampaignAPI(postData) {\n  return axios.post('/post/campaign', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* renderCampaign(action) {\n  try {\n    const result = yield call(renderCampaignAPI, action.data);\n    yield put({\n      type: RENDER_CAMPAIGN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: RENDER_CAMPAIGN_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchRenderCampaign() {\n  yield takeLatest(RENDER_CAMPAIGN_REQUEST, renderCampaign);\n}\n\nfunction searchCampaignAPI(search) {\n  return axios.get(`/post/search/${encodeURIComponent(search)}`);\n}\n\nfunction* searchCampaign(action) {\n  try {\n    const result = yield call(searchCampaignAPI, action.data);\n    yield put({\n      type: SEARCH_CAMPAIGN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: SEARCH_CAMPAIGN_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchsearchCampaign() {\n  yield takeLatest(SEARCH_CAMPAIGN_REQUEST, searchCampaign);\n}\n\nfunction downloadFileAPI(file_name) {\n  return axios.get(`/post/download/${encodeURIComponent(file_name)}`);\n}\n\nfunction* downloadFile(action) {\n  try {\n    const result = yield call(downloadFileAPI, action.data);\n    yield put({\n      type: DOWNLOAD_FILE_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: DOWNLOAD_FILE_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchDownloadFile() {\n  yield takeLatest(DOWNLOAD_FILE_REQUEST, downloadFile);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddAdidasWeb), fork(watchLoadData), fork(watchRenderCampaign), fork(watchsearchCampaign), fork(watchRemoveName), fork(watchDownloadFile)]);\n}","map":{"version":3,"sources":["C:/Users/Admins/Desktop/campaign-viewer/front/sagas/post.ts"],"names":["all","fork","takeLatest","put","call","axios","ADD_CAMPAIGN_REQUEST","ADD_CAMPAIGN_SUCCESS","ADD_CAMPAIGN_FAILURE","REMOVE_CAMPAIGN_REQUEST","REMOVE_CAMPAIGN_SUCCESS","REMOVE_CAMPAIGN_FAILURE","LOAD_DATA_REQUEST","LOAD_DATA_SUCCESS","LOAD_DATA_FAILURE","RENDER_CAMPAIGN_REQUEST","RENDER_CAMPAIGN_SUCCESS","RENDER_CAMPAIGN_FAILURE","SEARCH_CAMPAIGN_REQUEST","SEARCH_CAMPAIGN_SUCCESS","SEARCH_CAMPAIGN_FAILURE","DOWNLOAD_FILE_REQUEST","DOWNLOAD_FILE_SUCCESS","DOWNLOAD_FILE_FAILURE","addAdidasWebAPI","postData","post","withCredentials","addAdidasWeb","action","result","data","type","e","error","watchAddAdidasWeb","removeCampaignAPI","delete","removeCampaign","watchRemoveName","loadDataAPI","loadData","watchLoadData","renderCampaignAPI","renderCampaign","watchRenderCampaign","searchCampaignAPI","search","get","encodeURIComponent","searchCampaign","watchsearchCampaign","downloadFileAPI","file_name","downloadFile","watchDownloadFile","postSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, put, call, throttle, takeEvery }  from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    ADD_CAMPAIGN_REQUEST, // 캠페인 이름 DB에서 저장\r\n    ADD_CAMPAIGN_SUCCESS, \r\n    ADD_CAMPAIGN_FAILURE, \r\n    REMOVE_CAMPAIGN_REQUEST, // 캠페인 이름 DB에서 삭제\r\n    REMOVE_CAMPAIGN_SUCCESS,\r\n    REMOVE_CAMPAIGN_FAILURE,\r\n    LOAD_DATA_REQUEST, // 카드 데이터 로드\r\n    LOAD_DATA_SUCCESS, \r\n    LOAD_DATA_FAILURE,\r\n    RENDER_CAMPAIGN_REQUEST, // 캠페인 데이터 출력\r\n    RENDER_CAMPAIGN_SUCCESS,\r\n    RENDER_CAMPAIGN_FAILURE,\r\n    SEARCH_CAMPAIGN_REQUEST, // 카드 데이터 색인\r\n    SEARCH_CAMPAIGN_SUCCESS,\r\n    SEARCH_CAMPAIGN_FAILURE,\r\n    DOWNLOAD_FILE_REQUEST, // 다운로드 파일\r\n    DOWNLOAD_FILE_SUCCESS,\r\n    DOWNLOAD_FILE_FAILURE,\r\n    // 액션 생성 함수\r\n    addCampaignRequestAction,\r\n    loadDataRequestAction,\r\n    renderCampaignRequestAction,\r\n    searchCampaignRequestAction,\r\n    removeCampaignRequestAction,\r\n    downloadFileRequestAction,\r\n} from '../reducers/post/actions';\r\n\r\nfunction addAdidasWebAPI( postData ) {\r\n    return axios.post('/post/addcampaign', postData, {\r\n        withCredentials: true,\r\n    })\r\n}\r\nfunction* addAdidasWeb( action: ReturnType<typeof addCampaignRequestAction> ) {\r\n    try {\r\n        const result = yield call(addAdidasWebAPI, action.data);\r\n        yield put({\r\n            type: ADD_CAMPAIGN_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: ADD_CAMPAIGN_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchAddAdidasWeb() {\r\n    yield takeLatest(ADD_CAMPAIGN_REQUEST, addAdidasWeb);\r\n}\r\nfunction removeCampaignAPI( postData ) {\r\n    return axios.delete(`/post/${postData}`, {\r\n        withCredentials: true,\r\n    })\r\n}\r\nfunction* removeCampaign( action: ReturnType<typeof removeCampaignRequestAction> ) {\r\n    try {\r\n        const result = yield call(removeCampaignAPI, action.data);\r\n        yield put({\r\n            type: REMOVE_CAMPAIGN_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: REMOVE_CAMPAIGN_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchRemoveName() {\r\n    yield takeLatest(REMOVE_CAMPAIGN_REQUEST, removeCampaign);\r\n}\r\nfunction loadDataAPI() {\r\n    return axios.post('/post/list', {\r\n        withCredentials: true,\r\n    })\r\n}\r\nfunction* loadData( action: ReturnType<typeof loadDataRequestAction> ) {\r\n    try {\r\n        const result = yield call(loadDataAPI);\r\n        yield put({\r\n            type: LOAD_DATA_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: LOAD_DATA_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchLoadData() {\r\n    yield takeLatest(LOAD_DATA_REQUEST, loadData);\r\n}\r\nfunction renderCampaignAPI( postData ) {\r\n    return axios.post('/post/campaign', postData, {\r\n        withCredentials: true,\r\n    })\r\n}\r\nfunction* renderCampaign( action: ReturnType<typeof renderCampaignRequestAction> ) {\r\n    try {\r\n        const result = yield call(renderCampaignAPI, action.data);\r\n        yield put({\r\n            type: RENDER_CAMPAIGN_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: RENDER_CAMPAIGN_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchRenderCampaign() {\r\n    yield takeLatest(RENDER_CAMPAIGN_REQUEST, renderCampaign);\r\n}\r\nfunction searchCampaignAPI( search ) {\r\n    return axios.get(`/post/search/${encodeURIComponent(search)}`)\r\n}\r\nfunction* searchCampaign( action: ReturnType<typeof searchCampaignRequestAction> ) {\r\n    try {\r\n        const result = yield call(searchCampaignAPI, action.data);\r\n        yield put({\r\n            type: SEARCH_CAMPAIGN_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: SEARCH_CAMPAIGN_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchsearchCampaign() {\r\n    yield takeLatest(SEARCH_CAMPAIGN_REQUEST, searchCampaign);\r\n}\r\nfunction downloadFileAPI( file_name ) {\r\n    return axios.get(`/post/download/${encodeURIComponent(file_name)}`)\r\n}\r\nfunction* downloadFile( action: ReturnType<typeof downloadFileRequestAction> ) {\r\n    try {\r\n        const result = yield call(downloadFileAPI, action.data);\r\n        yield put({\r\n            type: DOWNLOAD_FILE_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: DOWNLOAD_FILE_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchDownloadFile() {\r\n    yield takeLatest(DOWNLOAD_FILE_REQUEST, downloadFile);\r\n}\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddAdidasWeb),\r\n        fork(watchLoadData),\r\n        fork(watchRenderCampaign),\r\n        fork(watchsearchCampaign),\r\n        fork(watchRemoveName),\r\n        fork(watchDownloadFile),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}